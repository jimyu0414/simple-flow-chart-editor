{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Desktop/flow-chart/client/src/App.js\";\nimport React from 'react';\nimport './App.scss';\nimport DragPanel from './Components/DragPanel';\nimport MenuPanel from './Components/MenuPanel';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleLoadingChart = () => {\n      // fetch('/api/shapes')\n      //   .then(res => res.json())\n      //   .then(shapes => this.setState({shapes},()=>console.log(shapes)));\n      //   this.globalShape = this.state.shapes;\n      fetch('/api/shapes').then(res => res.json()).then(shapes => this.globalShape = shapes);\n      this.setState({\n        shapes: globalShape\n      });\n    };\n\n    this.handleMenuShapeClick = shape => {\n      const uuidv1 = require('uuid/v1');\n\n      let newShape = {\n        id: uuidv1(),\n        shape: shape,\n        name: \"defult\",\n        positionx: \"0\",\n        positiony: \"0\"\n      };\n      this.setState({\n        shapes: this.state.shapes.concat(newShape)\n      });\n      this.globalShape = this.state.shapes;\n      console.log(this.globalShape);\n    };\n\n    this.handleJsonExport = () => {\n      const res = fetch('/api/exportshapes', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.globalShape)\n      });\n      console.log(res);\n    };\n\n    this.handleShapeNameChange = (newName, id) => {\n      //console.log(id);\n      let shapes = this.state.shapes;\n      shapes.forEach(function (shape) {\n        if (shape.id === id) {\n          shape.name = newName;\n        }\n      });\n      this.setState({\n        shapes: shapes\n      });\n      console.log(this.state.shapes);\n    };\n\n    this.handleShapePosition = (id, x, y) => {\n      //console.log(x);\n      let shapes = this.state.shapes;\n      shapes.forEach(function (shape) {\n        if (shape.id === id) {\n          shape.positionx = x;\n          shape.positiony = y;\n        }\n      }); //console.log(shapes)\n    };\n\n    globalShape = [];\n    this.state = {\n      shapes: []\n    }; //this.handleLoadingChart = this.handleLoadingChart.bind(this);\n  } //load from json file\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"app__header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Simple Flow Chart Editor\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"( Click to add a shape from left menu )\"), React.createElement(\"button\", {\n      className: \"btn__get-chart\",\n      onClick: this.handleLoadingChart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"LAST EXPORTED JSON CHART\"), React.createElement(\"button\", {\n      onClick: this.handleJsonExport,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"EXPORT JSON\")), React.createElement(MenuPanel, {\n      addShape: this.handleMenuShapeClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(DragPanel, {\n      shapes: this.state.shapes,\n      changeShapeName: this.handleShapeNameChange,\n      handleShapePosition: this.handleShapePosition,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yu/Desktop/flow-chart/client/src/App.js"],"names":["React","DragPanel","MenuPanel","App","Component","constructor","handleLoadingChart","fetch","then","res","json","shapes","globalShape","setState","handleMenuShapeClick","shape","uuidv1","require","newShape","id","name","positionx","positiony","state","concat","console","log","handleJsonExport","method","headers","body","JSON","stringify","handleShapeNameChange","newName","forEach","handleShapePosition","x","y","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAClCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAWXC,kBAXW,GAWS,MAAM;AACxB;AACA;AACA;AACA;AACAC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,MAAM,IAAI,KAAKC,WAAL,GAAmBD,MAFrC;AAGE,WAAKE,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAEC;AADI,OAAd;AAIH,KAvBU;;AAAA,SA0BXE,oBA1BW,GA0BaC,KAAD,IAAU;AAC/B,YAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,UAAIC,QAAQ,GAAG;AACbC,QAAAA,EAAE,EAAEH,MAAM,EADG;AAEbD,QAAAA,KAAK,EAAEA,KAFM;AAGbK,QAAAA,IAAI,EAAC,QAHQ;AAIbC,QAAAA,SAAS,EAAC,GAJG;AAKbC,QAAAA,SAAS,EAAC;AALG,OAAf;AAOA,WAAKT,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE,KAAKY,KAAL,CAAWZ,MAAX,CAAkBa,MAAlB,CAAyBN,QAAzB;AADI,OAAd;AAGA,WAAKN,WAAL,GAAmB,KAAKW,KAAL,CAAWZ,MAA9B;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,WAAjB;AACD,KAxCU;;AAAA,SA2CXe,gBA3CW,GA2CQ,MAAM;AAEzB,YAAMlB,GAAG,GAAIF,KAAK,CAAC,mBAAD,EAAsB;AACtCqB,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAF6B;AAMtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAKpB,WAApB;AANgC,OAAtB,CAAlB;AASAa,MAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AACC,KAvDU;;AAAA,SA2DXwB,qBA3DW,GA2Da,CAACC,OAAD,EAAUf,EAAV,KAAgB;AACtC;AACA,UAAIR,MAAM,GAAG,KAAKY,KAAL,CAAWZ,MAAxB;AACAA,MAAAA,MAAM,CAACwB,OAAP,CAAe,UAASpB,KAAT,EAAgB;AAC7B,YAAIA,KAAK,CAACI,EAAN,KAAaA,EAAjB,EAAqB;AACnBJ,UAAAA,KAAK,CAACK,IAAN,GAAac,OAAb;AACD;AACF,OAJD;AAKA,WAAKrB,QAAL,CAAc;AACVF,QAAAA,MAAM,EAAEA;AADE,OAAd;AAIAc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWZ,MAAvB;AACD,KAxEU;;AAAA,SA2EXyB,mBA3EW,GA2EW,CAACjB,EAAD,EAAIkB,CAAJ,EAAMC,CAAN,KAAW;AAC7B;AACA,UAAI3B,MAAM,GAAG,KAAKY,KAAL,CAAWZ,MAAxB;AACAA,MAAAA,MAAM,CAACwB,OAAP,CAAe,UAASpB,KAAT,EAAgB;AAC7B,YAAIA,KAAK,CAACI,EAAN,KAAaA,EAAjB,EAAqB;AACnBJ,UAAAA,KAAK,CAACM,SAAN,GAAkBgB,CAAlB;AACAtB,UAAAA,KAAK,CAACO,SAAN,GAAkBgB,CAAlB;AACD;AACF,OALD,EAH6B,CAS7B;AACH,KArFU;;AAEX1B,IAAAA,WAAW,GAAC,EAAZ;AACA,SAAKW,KAAL,GAAW;AACTZ,MAAAA,MAAM,EAAC;AADE,KAAX,CAHW,CAMZ;AACA,GARiC,CAWhC;;;AA8EA4B,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFA,EAGA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAmC,MAAA,OAAO,EAAE,KAAKjC,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHA,EAIA;AAAQ,MAAA,OAAO,EAAE,KAAKqB,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJA,CADE,EAOA,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAI,KAAKb,oBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAUA,oBAAC,SAAD;AACE,MAAA,MAAM,EAAI,KAAKS,KAAL,CAAWZ,MADvB;AAEE,MAAA,eAAe,EAAI,KAAKsB,qBAF1B;AAGE,MAAA,mBAAmB,EAAI,KAAKG,mBAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CADF;AAkBD;;AA5G+B;;AA+GlC,eAAejC,GAAf","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport DragPanel from './Components/DragPanel';\nimport MenuPanel from './Components/MenuPanel';\n\nclass App extends React.Component {\nconstructor(){\n  super();\n  globalShape=[];\n  this.state={\n    shapes:[]\n  }\n //this.handleLoadingChart = this.handleLoadingChart.bind(this);\n}\n\n\n  //load from json file\n  handleLoadingChart =() => {\n    // fetch('/api/shapes')\n    //   .then(res => res.json())\n    //   .then(shapes => this.setState({shapes},()=>console.log(shapes)));\n    //   this.globalShape = this.state.shapes;\n    fetch('/api/shapes')\n      .then(res => res.json())\n      .then(shapes => this.globalShape = shapes);\n      this.setState({\n        shapes: globalShape,\n      }\n      )\n  }\n\n  //add new shape to drag pannel\n  handleMenuShapeClick = (shape) =>{\n    const uuidv1 = require('uuid/v1');\n    let newShape = {\n      id: uuidv1(),\n      shape: shape,\n      name:\"defult\",\n      positionx:\"0\",\n      positiony:\"0\"\n    }\n    this.setState({\n      shapes: this.state.shapes.concat(newShape)\n    })\n    this.globalShape = this.state.shapes;\n    console.log(this.globalShape)\n  }\n\n  //export to json file\n  handleJsonExport = () => {\n\n  const res =  fetch('/api/exportshapes', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(this.globalShape)\n  });\n\n  console.log(res);\n  }\n\n\n  //handleShapeNameChange\n  handleShapeNameChange = (newName, id) =>{\n    //console.log(id);\n    let shapes = this.state.shapes;\n    shapes.forEach(function(shape) {\n      if (shape.id === id) {\n        shape.name = newName;\n      }\n    });\n    this.setState({\n        shapes: shapes\n    }\n    )\n    console.log(this.state.shapes)\n  }\n\n  //update pictular shape position\n  handleShapePosition = (id,x,y) =>{\n      //console.log(x);\n      let shapes = this.state.shapes;\n      shapes.forEach(function(shape) {\n        if (shape.id === id) {\n          shape.positionx = x;\n          shape.positiony = y;\n        }\n      });\n      //console.log(shapes)\n  }\n\n\n  render(){\n    return(\n      <div className=\"app\">\n    <div className=\"app__header\">\n    <h1>Simple Flow Chart Editor</h1>\n    <p>( Click to add a shape from left menu )</p>\n    <button className=\"btn__get-chart\" onClick={this.handleLoadingChart}>LAST EXPORTED JSON CHART</button>\n    <button onClick={this.handleJsonExport}>EXPORT JSON</button>\n    </div>\n      <MenuPanel\n        addShape = {this.handleMenuShapeClick}\n      />\n      <DragPanel\n        shapes = {this.state.shapes}\n        changeShapeName = {this.handleShapeNameChange}\n        handleShapePosition = {this.handleShapePosition}\n      />\n    </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}