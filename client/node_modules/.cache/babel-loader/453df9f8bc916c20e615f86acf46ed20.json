{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Desktop/flow-chart/client/src/Components/DragShape.js\";\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport Text from './ToggleableText';\n\nclass DragShape extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      shapeId: '',\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n\n    this.handleDrag = (e, ui) => {\n      console.log('shape moved');\n      const _this$state$deltaPosi = this.state.deltaPosition,\n            x = _this$state$deltaPosi.x,\n            y = _this$state$deltaPosi.y;\n      this.setState({\n        deltaPosition: {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        }\n      });\n    };\n  }\n\n  render() {\n    const dragHandlers = {\n      onStart: this.onStart,\n      onStop: this.onStop\n    }; //console.log(shape)\n\n    const shapeClassName = 'box--' + this.props.shape.shape; //setup default position\n\n    const position = {\n      x: parseInt(this.props.shape.positionx),\n      y: parseInt(this.props.shape.positiony)\n    };\n    return React.createElement(Draggable, Object.assign({\n      key: shape.this.props.id,\n      defaultPosition: this.props.defaultPosition,\n      onDrag: this.handleDrag,\n      bounds: \"parent\"\n    }, dragHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: shapeClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Text, {\n      id: shape.id,\n      name: shape.name,\n      changeShapeTextName: this.props.changeShapeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DragShape;","map":{"version":3,"sources":["/Users/yu/Desktop/flow-chart/client/src/Components/DragShape.js"],"names":["React","Draggable","Text","DragShape","Component","state","shapeId","deltaPosition","x","y","handleDrag","e","ui","console","log","setState","deltaX","deltaY","render","dragHandlers","onStart","onStop","shapeClassName","props","shape","position","parseInt","positionx","positiony","this","id","defaultPosition","name","changeShapeName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACAC,MAAAA,OAAO,EAAC,EADR;AAEAC,MAAAA,aAAa,EAAE;AACbC,QAAAA,CAAC,EAAE,CADU;AACPC,QAAAA,CAAC,EAAE;AADI;AAFf,KAFgC;;AAAA,SAStCC,UATsC,GASzB,CAACC,CAAD,EAAIC,EAAJ,KAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AADsB,oCAEP,KAAKT,KAAL,CAAWE,aAFJ;AAAA,YAEfC,CAFe,yBAEfA,CAFe;AAAA,YAEZC,CAFY,yBAEZA,CAFY;AAGtB,WAAKM,QAAL,CAAc;AACZR,QAAAA,aAAa,EAAE;AACbC,UAAAA,CAAC,EAAEA,CAAC,GAAGI,EAAE,CAACI,MADG;AAEbP,UAAAA,CAAC,EAAEA,CAAC,GAAGG,EAAE,CAACK;AAFG;AADH,OAAd;AAOD,KAnBqC;AAAA;;AAqBtCC,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AAACC,MAAAA,OAAO,EAAE,KAAKA,OAAf;AAAwBC,MAAAA,MAAM,EAAE,KAAKA;AAArC,KAArB,CADO,CAEP;;AACA,UAAMC,cAAc,GAAG,UAAU,KAAKC,KAAL,CAAWC,KAAX,CAAiBA,KAAlD,CAHO,CAIP;;AACA,UAAMC,QAAQ,GAAG;AACfjB,MAAAA,CAAC,EAAEkB,QAAQ,CAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,SAAlB,CADI;AAEflB,MAAAA,CAAC,EAAEiB,QAAQ,CAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBI,SAAlB;AAFI,KAAjB;AAIA,WACE,oBAAC,SAAD;AACA,MAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,CAAWN,KAAX,CAAiBO,EADtB;AAEA,MAAA,eAAe,EAAE,KAAKP,KAAL,CAAWQ,eAF5B;AAGA,MAAA,MAAM,EAAE,KAAKrB,UAHb;AAIA,MAAA,MAAM,EAAC;AAJP,OAIoBS,YAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOM;AAAK,MAAA,SAAS,EAAEG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACA,MAAA,EAAE,EAAEE,KAAK,CAACM,EADV;AAEA,MAAA,IAAI,EAAEN,KAAK,CAACQ,IAFZ;AAGA,MAAA,mBAAmB,EAAI,KAAKT,KAAL,CAAWU,eAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPN,CADF;AAiBD;;AA/CqC;;AAkDxC,eAAe9B,SAAf","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\nimport Text from './ToggleableText';\n\nclass DragShape extends React.Component {\n\nstate = {\n        shapeId:'',\n        deltaPosition: {\n          x: 0, y: 0\n        },\n      };\n\n  handleDrag = (e, ui) => {\n    console.log('shape moved');\n    const {x, y} = this.state.deltaPosition;\n    this.setState({\n      deltaPosition: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n\n  };\n\n  render() {\n    const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\n    //console.log(shape)\n    const shapeClassName = 'box--' + this.props.shape.shape;\n    //setup default position\n    const position = {\n      x: parseInt(this.props.shape.positionx),\n      y: parseInt(this.props.shape.positiony)\n    }\n    return (\n      <Draggable\n      key={shape.this.props.id}\n      defaultPosition={this.props.defaultPosition}\n      onDrag={this.handleDrag}\n      bounds=\"parent\" {...dragHandlers}\n\n      >\n            <div className={shapeClassName}>\n              <Text\n              id={shape.id}\n              name={shape.name}\n              changeShapeTextName = {this.props.changeShapeName}\n              />\n            </div>\n      </Draggable>\n    );\n  }\n}\n\nexport default DragShape;\n"]},"metadata":{},"sourceType":"module"}