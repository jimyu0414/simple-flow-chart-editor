{"ast":null,"code":"var _jsxFileName = \"/Users/yu/Desktop/flow-chart/client/src/Components/DragShape.js\";\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport Text from './ToggleableText';\n\nclass DragShape extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deltaPosition: {\n        x: 0,\n        y: 0\n      }\n    };\n\n    this.handleDrag = (e, ui) => {\n      const _this$state$deltaPosi = this.state.deltaPosition,\n            x = _this$state$deltaPosi.x,\n            y = _this$state$deltaPosi.y;\n      this.setState({\n        deltaPosition: {\n          x: x + ui.deltaX,\n          y: y + ui.deltaY\n        }\n      });\n      console.log(this.props.shape.id, this.state.deltaPosition.x, this.state.deltaPosition.y);\n    };\n  }\n\n  render() {\n    const dragHandlers = {\n      onStart: this.onStart,\n      onStop: this.onStop\n    }; //console.log(shape)\n\n    const shapeClassName = 'box--' + this.props.shape.shape; //setup default position\n\n    const position = {\n      x: parseInt(this.props.shape.positionx),\n      y: parseInt(this.props.shape.positiony)\n    };\n    return React.createElement(Draggable, Object.assign({\n      defaultPosition: position,\n      onDrag: this.handleDrag,\n      bounds: \"parent\"\n    }, dragHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: shapeClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Text, {\n      id: this.props.shape.id,\n      name: this.props.shape.name,\n      changeShapeTextName: this.props.changeShapeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DragShape;","map":{"version":3,"sources":["/Users/yu/Desktop/flow-chart/client/src/Components/DragShape.js"],"names":["React","Draggable","Text","DragShape","Component","state","deltaPosition","x","y","handleDrag","e","ui","setState","deltaX","deltaY","console","log","props","shape","id","render","dragHandlers","onStart","onStop","shapeClassName","position","parseInt","positionx","positiony","name","changeShapeName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACAC,MAAAA,aAAa,EAAE;AACbC,QAAAA,CAAC,EAAE,CADU;AACPC,QAAAA,CAAC,EAAE;AADI;AADf,KAFgC;;AAAA,SAUtCC,UAVsC,GAUzB,CAACC,CAAD,EAAIC,EAAJ,KAAW;AAAA,oCACP,KAAKN,KAAL,CAAWC,aADJ;AAAA,YACfC,CADe,yBACfA,CADe;AAAA,YACZC,CADY,yBACZA,CADY;AAEtB,WAAKI,QAAL,CAAc;AACZN,QAAAA,aAAa,EAAE;AACbC,UAAAA,CAAC,EAAEA,CAAC,GAAGI,EAAE,CAACE,MADG;AAEbL,UAAAA,CAAC,EAAEA,CAAC,GAAGG,EAAE,CAACG;AAFG;AADH,OAAd;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,EAA7B,EAAiC,KAAKd,KAAL,CAAWC,aAAX,CAAyBC,CAA1D,EAA6D,KAAKF,KAAL,CAAWC,aAAX,CAAyBE,CAAtF;AACD,KAnBqC;AAAA;;AAuBtCY,EAAAA,MAAM,GAAG;AACP,UAAMC,YAAY,GAAG;AAACC,MAAAA,OAAO,EAAE,KAAKA,OAAf;AAAwBC,MAAAA,MAAM,EAAE,KAAKA;AAArC,KAArB,CADO,CAEP;;AACA,UAAMC,cAAc,GAAG,UAAU,KAAKP,KAAL,CAAWC,KAAX,CAAiBA,KAAlD,CAHO,CAIP;;AACA,UAAMO,QAAQ,GAAG;AACflB,MAAAA,CAAC,EAAEmB,QAAQ,CAAC,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,SAAlB,CADI;AAEfnB,MAAAA,CAAC,EAAEkB,QAAQ,CAAC,KAAKT,KAAL,CAAWC,KAAX,CAAiBU,SAAlB;AAFI,KAAjB;AAIA,WACE,oBAAC,SAAD;AACA,MAAA,eAAe,EAAEH,QADjB;AAEA,MAAA,MAAM,EAAE,KAAKhB,UAFb;AAGA,MAAA,MAAM,EAAC;AAHP,OAGoBY,YAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMM;AAAK,MAAA,SAAS,EAAEG,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACA,MAAA,EAAE,EAAE,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,EADrB;AAEA,MAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,KAAX,CAAiBW,IAFvB;AAGA,MAAA,mBAAmB,EAAI,KAAKZ,KAAL,CAAWa,eAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANN,CADF;AAgBD;;AAhDqC;;AAmDxC,eAAe3B,SAAf","sourcesContent":["import React from 'react';\nimport Draggable from 'react-draggable';\nimport Text from './ToggleableText';\n\nclass DragShape extends React.Component {\n\nstate = {\n        deltaPosition: {\n          x: 0, y: 0\n        },\n      };\n\n\n\n  handleDrag = (e, ui) => {\n    const {x, y} = this.state.deltaPosition;\n    this.setState({\n      deltaPosition: {\n        x: x + ui.deltaX,\n        y: y + ui.deltaY,\n      }\n    });\n    console.log(this.props.shape.id, this.state.deltaPosition.x, this.state.deltaPosition.y)\n  };\n\n\n\n  render() {\n    const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\n    //console.log(shape)\n    const shapeClassName = 'box--' + this.props.shape.shape;\n    //setup default position\n    const position = {\n      x: parseInt(this.props.shape.positionx),\n      y: parseInt(this.props.shape.positiony)\n    }\n    return (\n      <Draggable\n      defaultPosition={position}\n      onDrag={this.handleDrag}\n      bounds=\"parent\" {...dragHandlers}\n\n      >\n            <div className={shapeClassName}>\n              <Text\n              id={this.props.shape.id}\n              name={this.props.shape.name}\n              changeShapeTextName = {this.props.changeShapeName}\n              />\n            </div>\n      </Draggable>\n    );\n  }\n}\n\nexport default DragShape;\n"]},"metadata":{},"sourceType":"module"}